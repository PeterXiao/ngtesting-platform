<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ngtesting.platform.dao.CustomFieldDao" >

    <select id="list" resultType="CustomField">
        SELECT * FROM CustomField o
        WHERE o.orgId=#{orgId}

        <if test="keywords != null and keywords != ''">
            AND o.label LIKE CONCAT('%','${keywords}','%' )
        </if>
        <if test="applyTo != null and applyTo != ''">
            AND o.applyTo = #{applyTo}
        </if>

        AND o.disabled!=TRUE AND o.deleted!=TRUE
        ORDER BY ordr ASC
    </select>

    <select id="listForCase" resultMap="customFieldMap">
        SELECT customField.id, CONCAT('cust-', customField.id) `key`,
            customField.id fieldId, customField.colCode, customField.label,
            customField.type, customField.input,
            customField.fullLine, customField.required, customField.readonly, false isBuildIn,
            customField.ordr, customField.orgId

        FROM CustomField customField
        WHERE customField.orgId = #{orgId} AND customField.applyTo = 'test_case'

        AND customField.disabled != TRUE AND customField.deleted != TRUE
        ORDER BY customField.ordr ASC
    </select>

    <select id="get" resultType="CustomField">
        SELECT * FROM CustomField o

        WHERE o.id = #{id}
        <if test="orgId != null">
            AND o.orgId=#{orgId}
        </if>
    </select>
    <select id="getDetail" resultMap="customFieldMap">
        SELECT * FROM CustomField o
        WHERE o.id = #{id}
        <if test="orgId != null">
            AND o.orgId=#{orgId}
        </if>
    </select>

    <insert id="save" parameterType="CustomField" useGeneratedKeys="true" keyProperty="id">
        insert into CustomField
        (label,colCode,required,descr,`type`,`input`,`rows`,textFormat,applyTo,
        orgId,ordr,isBuildIn, readonly, fullLine, deleted,disabled,createTime)
        values
        (#{label},#{colCode},#{required},#{descr},#{type},#{input},#{rows},#{textFormat},#{applyTo},
        #{orgId},#{ordr}, #{isBuildIn}, #{readonly}, #{fullLine}, FALSE, FALSE, NOW())
    </insert>

    <update id="update" parameterType="CustomField">
        UPDATE CustomField
        SET label=#{label},descr=#{descr},`type`=#{type},`input`=#{input},
        rows=#{rows}, textFormat=#{textFormat},applyTo=#{applyTo},
        fullLine=#{fullLine},
        orgId=#{orgId}, disabled=#{disabled}, updateTime=NOW()

        WHERE id=#{id} AND orgId=#{orgId}
    </update>

    <delete id="delete">
        UPDATE CustomField
        SET deleted=TRUE, updateTime=NOW()
        WHERE id=#{id} AND orgId=#{orgId}
    </delete>

    <select id="getPrev" resultType="CustomField">
        <![CDATA[
            SELECT * FROM CustomField o
            WHERE o.ordr < #{ordr} AND o.orgId = #{orgId}
            AND o.applyTo=#{applyTo} AND o.deleted != TRUE
            ORDER BY o.ordr DESC LIMIT 1
        ]]>
    </select>

    <select id="getNext" resultType="CustomField">
        <![CDATA[
            SELECT * FROM CustomField o
            WHERE o.ordr > #{ordr} AND o.orgId = #{orgId}
            AND o.applyTo=#{applyTo} AND o.deleted != TRUE
            ORDER BY o.ordr ASC LIMIT 1
        ]]>
    </select>

    <update id="setOrder">
        UPDATE CustomField
        SET ordr=#{ordr}, updateTime=NOW()
        WHERE id=#{id} AND orgId=#{orgId}
    </update>


    <select id="getLastUnusedColumn" resultType="String">
        select cf.colCode from CustomField cf

        where cf.orgId = #{orgId}
        and cf.deleted != TRUE and cf.disabled != TRUE

        order by cf.colCode asc
    </select>

    <select id="getMaxOrdrNumb" resultType="Integer">
        select max(ordr) from CustomField o
        where o.orgId=#{orgId} AND o.applyTo=#{applyTo}
        and o.deleted != true
        and o.disabled != true
    </select>

    <resultMap id="customFieldMap" type="Map" autoMapping="true">
        <id column="id" property="id"/>

        <collection property="options" select="com.ngtesting.platform.dao.CustomFieldOptionDao.getByFieldId"
                    column="{id=id}">
        </collection>
    </resultMap>

</mapper>
